// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace EmployeeAppCore.Entity.Employee_Details.Entity
{
    public partial class Employee_ManagementContext : DbContext
    {
        public Employee_ManagementContext()
        {
        }

        public Employee_ManagementContext(DbContextOptions<Employee_ManagementContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Employee_Details> Employee_Details { get; set; }
        public virtual DbSet<Employee_Location> Employee_Location { get; set; }
        public virtual DbSet<Employee_LogIn> Employee_LogIn { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
//#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer("Data Source=(localdb)\\MSSqlLocalDb;Initial Catalog=Employee_Management;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Employee_Details>(entity =>
            {
                entity.Property(e => e.Adress).IsUnicode(false);

                entity.Property(e => e.Created_Time_Stamp).HasComment("(getdate())");

                entity.Property(e => e.First_Name).IsUnicode(false);

                entity.Property(e => e.Second_Name).IsUnicode(false);

                entity.Property(e => e.Updated_Time_Stamp).HasComment("(getdate())");

                entity.HasOne(d => d.User_)
                    .WithMany(p => p.Employee_Details)
                    .HasForeignKey(d => d.User_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Employee_Details_Employee_Location");
            });

            modelBuilder.Entity<Employee_Location>(entity =>
            {
                entity.Property(e => e.Created_Time_Stamp).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Location).IsUnicode(false);

                entity.Property(e => e.Updated_Time_Stamp).HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<Employee_LogIn>(entity =>
            {
                entity.Property(e => e.Password).IsUnicode(false);

                entity.Property(e => e.Username).IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}